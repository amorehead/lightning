name: Docker

on:
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]
    paths:
      - ".github/workflows/release-docker.yml"
      - "dockers/release/*"
  release:
    types: [published]

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # We only release one docker image per PyTorch version.
          - {python_version: "3.9", pytorch_version: "1.13", cuda_version: "11.8.0"}
          - {python_version: "3.9", pytorch_version: "1.13", cuda_version: "12.0.1"}
          - {python_version: "3.10", pytorch_version: "2.0", cuda_version: "11.8.0"}
          - {python_version: "3.10", pytorch_version: "2.0", cuda_version: "12.0.1"}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF##*/})" >> $GITHUB_OUTPUT

      - name: Publish Releases to Docker
        uses: docker/build-push-action@v4
        with:
          repository: pytorchlightning/pytorch_lightning
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # only on releases
          push: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' }}
          file: dockers/release/Dockerfile
          build_args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            PYTORCH_VERSION=${{ matrix.pytorch_version }}
            CUDA_VERSION=${{ matrix.cuda_version }}
            LIGHTNING_VERSION=${{ steps.get_version.outputs.RELEASE_VERSION }}
          tags: |
            ${{ steps.get_version.outputs.RELEASE_VERSION }}-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}-cuda${{ matrix.cuda_version }}
            latest-py${{ matrix.python_version }}-torch${{ matrix.pytorch_version }}-cuda${{ matrix.cuda_version }}
        timeout-minutes: 55

      - name: Publish Latest to Docker
        uses: docker/build-push-action@v4
        # Only latest Python and PyTorch
        if: matrix.python_version == '3.10' && matrix.pytorch_version == '2.0'
        with:
          repository: pytorchlightning/pytorch_lightning
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # only on releases
          push: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'release' }}
          file: dockers/release/Dockerfile
          build_args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            PYTORCH_VERSION=${{ matrix.pytorch_version }}
            CUDA_VERSION=${{ matrix.cuda_version }}
            LIGHTNING_VERSION=${{ steps.get_version.outputs.RELEASE_VERSION }}
          tags: "latest"
        timeout-minutes: 55
